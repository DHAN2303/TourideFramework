{
  "ConnectionStrings": {
    "SampleConnectionstring": "Server=127.0.0.1;Port=5432;Database=TestDb;User Id=postgres;Password=Passw0rd123$"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "EmailSettings": {
    "EnableSsl": false,
    "UserName": "",
    "Password": "",
    "Host": "10.0.1.102",
    "Port": "25",
    "From": "mail@domain.com.tr"
  },
  "CronJobTiming": {
    "Shorting": "0 8 * * *"
  },
  "ElasticApm": {
    "SecretToken": "",
    "ServerUrls": "http://localhost:8200", //Set custom APM Server URL (default: http://localhost:8200)
    "ServiceName": "Test Managment Api",
    "Environment": "dev"
  },
  "Touride.Framework": {
    "ElasticSearch": {
      "Url": "http://localhost:9200"
    },
    "ApiVersioning": false,
    "DaprSettings": {
      "ActorModel": false,
      "PubSubName": "pubsub",
      "StateStoreName": "statestore"
    },
    "AzureKeyVault": {
      "Url": "",
      "ClientId": ""
    },
    "CrosDomain": {
      "Prod": "",
      "Dev": "http://localhost:3000"
    },
    "DatabaseMigrationsConfiguration": {
      "ApplyDatabaseMigrations": true
    },
    "gRPC": {
      "Server": {
        "Enabled": false
      },
      "Client": {
        "Enabled": true,
        "ChannelUrl": [
          ""
        ]
      }
    },
    "Monitoring": {
      "AzureApplicationInsights": {
        "IsEnabled": false,
        "InstrumentationKey": null,
        "EnableSqlCommandTextInstrumentation": false
      },
      "AppMetrics": {
        "IsEnabled": false
      }
    },
    "Data": {
      "UnitOfWork": {
        "EnableCreatedAtAuditField": true,
        "EnableCreatedByAuditField": true,
        "EnableCreatedDateAuditField": true,
        "EnableUpdatedAtAuditField": true,
        "EnableUpdatedByAuditField": true,
        "EnableUpdatedDateAuditField": true,
        "EnableCreatedByUserCodeAuditField": true,
        "EnableUpdatedByUserCodeAuditField": false,
        "DefaultDeletePropertyName": "isDeleted",
        "DefaultActivePropertyName": "isActive",
        "RunAsDisconnected": true,
        "EnableDebuggerLogger": true,
        "DefaultDeleteBehavior": "Restrict",
        "EnableDatabaseCreation": true,
        "EnableDatabaseDeletion": true,
        "EnableDataAudit": false
      }
    },
    "DataAudit": {
      "SqlServer": {
        "ConnectionString": "",
        "SchemaName": "dbo",
        "TableName": "AuditLogs",
        "AuditTablePrimaryKeyColumnName": "Id",
        "AuditTableColumnNameForPk1": "Pk1",
        "AuditTableColumnNameForPk2": "Pk2",
        "AuditTableColumnNameForDatabaseName": "Database",
        "AuditTableColumnNameForSchemaName": "Schema",
        "AuditTableColumnNameForTableName": "Table",
        "AuditTableColumnNameForEventType": "EventType",
        "AuditTableColumnNameForPropertyValues": "Data",
        "AuditTableColumnNameForEventTime": "EventTime",
        "AuditTableColumnNameForUser": "User",
        "RunAsTransactional": false,
        "AuditTableColumnNameForCorrelationId": "CorrelationId",
        "AuditTableColumnNameForCorrelationSeq": "CorrelationSeq"
      },
      "Postgresql": {
        "ConnectionString": "",
        "SchemaName": "public",
        "TableName": "AuditLogs",
        "AuditTablePrimaryKeyColumnName": "Id",
        "AuditTableColumnNameForPk1": "Pk1",
        "AuditTableColumnNameForPk2": "Pk2",
        "AuditTableColumnNameForDatabaseName": "Database",
        "AuditTableColumnNameForSchemaName": "Schema",
        "AuditTableColumnNameForTableName": "Tablo",
        "AuditTableColumnNameForEventType": "EventType",
        "AuditTableColumnNameForPropertyValues": "Data",
        "AuditTableColumnNameForEventTime": "EventTime",
        "AuditTableColumnNameForUser": "Kullanici",
        "RunAsTransactional": false
      },
      "ElasticSearch": {
        "Uri": "http://localhost:9200",
        "Timeout": 60,
        "IndexName": "sortingdataaudit",
        "UserName": "elastic",
        "Password": "elastic"
      },
      "RabbitMq": {
        "Username": "guest",
        "Password": "guest",
        "Exchange": "app-logging",
        "QueueName": "log_que",
        "ExchangeType": "topic",
        "RouteKey": "Logs",
        "Port": 5672,
        "Hostname": "amqp://localhost"
      }
    },
    "OpenApi": {
      "Name": "ProjectName Api Production Environment",
      "URL": "https://df-api.net/p1/[servicename]/v1.0/invoke/[servicename].prod/method"
      // Ã–rnek URl: https://df-api.net/p1/TourideApi/v1.0/invoke/projectnameapi.prod/method
    },
    "Security": {
      "Jwt": {
        "ClientEnable": false,
        "Audience": "test-api",
        "Authority": "http://authority.domain.com",
        "RequireHttpsMetadata": false,
        "ClientId": "test_api_swaggerui",
        "ApiName": "Test Managment Api",
        "Scopes": [
          "test-write",
          "test-read"
        ]
      }
    },
    "Logging": {
      "LoggerType": "Serilog",
      "EnableSelfLog": true,
      "ApplicationName": "Sample API",
      "OverrideMicrosoftLevels": true,
      "EnableWriteToConsole": true,
      "EnableWriteToDebug": true,
      "ClearDefaultLogProviders": true,
      "EnableRequestResponseLogging": true,
      "EnableWriteToFile": true,
      "LogToFileOptions": {
        "Path": "./Logs/log.json",
        "MinimumLevel": "Information",
        "RollingInterval": "Day"
      },
      "EnableWriteToElasticSearch": false,
      "LogToElasticSearchOptions": {
        "MinimumLevel": "Information",
        "Uri": "http://localhost:9200",
        "AutoRegisterTemplate": false,
        "TemplateName": "api-events-template",
        "IndexFormat": "api-log-sorting-{0:yyyy.MM.dd}",
        "UserName": "elastic",
        "Password": "elastic"
      },
      "EnableWriteToMsSqlServer": false,
      "LogToMsSqlServerOptions": {
        "ConnectionString": "",
        "AutoCreateSqlTable": true,
        "SchemaName": "dbo",
        "TableName": "Logs",
        "BatchPeriod": 5,
        "BatchPostingLimit": 50
      },
      "EnableWriteToRabbitMq": false,
      "LogToRabbitMqOptions": {
        "Username": "guest",
        "Password": "guest",
        "Exchange": "app-logging",
        "ExchangeType": "topic",
        "RouteKey": "Logs",
        "Port": 5672, //log_que
        "Hostnames": [
          "amqp://localhost"
        ]
      },
      "EnableWriteGraylog": false,
      "LogToGraylogOptions": {
        "HostnameOrAddress": "",
        "Port": 0
      }
    },
    "Service": {
      "Backends": [
        {
          "Name": "TestApi1",
          "Address": "https://localhost:8000/v1/"
        },
        {
          "Name": "TestApi2",
          "Address": "https://localhost:8000/v1/"
        }
      ]
    },
    "Caching": {
      "InMemory": {
        "Name": "InMemoryCache",
        "EnableCacheUpdateMode": true,
        "DefaultExpirtaionMode": "Sliding",
        "DefaultExpirationTimeout": "00:10:00",
        "PolicySettings": {
          "Policy1": {
            "ExpirationMode": "Default",
            "ExpirationTime": "00:00:05"
          },
          "Policy2": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:15"
          }
        },
        "CacheItemSettings": {
          "Key1": {
            "ExpirationMode": "Default",
            "ExpirationTime": "00:00:05"
          },
          "Key2": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:15"
          },
          "Key3": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:20"
          }
        },
        "EnableJsonSerializer": true
      },
      "Redis": {
        "Name": "RedisCache",
        "EnableCacheUpdateMode": true,
        "DefaultExpirtaionMode": "Sliding",
        "DefaultExpirationTimeout": "00:30:00",
        "PolicySettings": {
          "Policy1": {
            "ExpirationMode": "Default",
            "ExpirationTime": "00:00:05"
          },
          "Policy2": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:01"
          }
        },
        "CacheItemSettings": {
          "Key1": {
            "ExpirationMode": "Default",
            "ExpirationTime": "00:00:05"
          },
          "Key2": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:15"
          },
          "Key3": {
            "ExpirationMode": "Absolute",
            "ExpirationTime": "00:00:20"
          }
        },
        "EnableJsonSerializer": true,
        "PreserveReferencesHandling": "Objects",
        "ConfigurationKey": "ConfigurationKey",
        "ConnectionString": "Redis: 127.0.0.1:6379,password=Ca1849..",
        "Database": 0,
        "MaxRetries": 50,
        "RetryTimeout": 100
      }
    },
    "SignalR": {
      "EnableScaling": false,
      "StateStore": {
        "Address": "Redis: 127.0.0.1:6379,password=Ca1849..",
        "Port": 6379
      }
    },
    "TaskScheduling": {
      "Hangfire": {
        "Enabled": true,
        "DataBaseName": {
          "PostgreSql": true,
          "SqlServer": false
        },
        "ConnectionString": "Server=127.0.0.1;Port=5432;Database=HangfireDb;User Id=postgres;Password=Passw0rd123$",
        "SelfBackgroundJobServer": false,
        "Queues": [ "default" ],
        "ServerName": "sortingserver",
        "UserName": "admin",
        "Password": "passw0rd!",
        "DashboardTitle": null,
        "Dashboard": true,
        "ShutDownTimeout": 30
      }
    }
  },
  "AllowedHosts": "*"
}